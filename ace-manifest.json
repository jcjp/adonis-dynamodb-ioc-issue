{
  "commands": {
    "dump:rcfile": {
      "settings": {},
      "commandPath": "@adonisjs/core/build/commands/DumpRc",
      "commandName": "dump:rcfile",
      "description": "Dump contents of .adonisrc.json file along with defaults",
      "args": [],
      "aliases": [],
      "flags": []
    },
    "list:routes": {
      "settings": {
        "loadApp": true,
        "stayAlive": true
      },
      "commandPath": "@adonisjs/core/build/commands/ListRoutes/index",
      "commandName": "list:routes",
      "description": "List application routes",
      "args": [],
      "aliases": [],
      "flags": [
        {
          "name": "verbose",
          "propertyName": "verbose",
          "type": "boolean",
          "description": "Display more information"
        },
        {
          "name": "reverse",
          "propertyName": "reverse",
          "type": "boolean",
          "alias": "r",
          "description": "Reverse routes display"
        },
        {
          "name": "methods",
          "propertyName": "methodsFilter",
          "type": "array",
          "alias": "m",
          "description": "Filter routes by method"
        },
        {
          "name": "patterns",
          "propertyName": "patternsFilter",
          "type": "array",
          "alias": "p",
          "description": "Filter routes by the route pattern"
        },
        {
          "name": "names",
          "propertyName": "namesFilter",
          "type": "array",
          "alias": "n",
          "description": "Filter routes by route name"
        },
        {
          "name": "json",
          "propertyName": "json",
          "type": "boolean",
          "description": "Output as JSON"
        },
        {
          "name": "table",
          "propertyName": "table",
          "type": "boolean",
          "description": "Output as Table"
        },
        {
          "name": "max-width",
          "propertyName": "maxWidth",
          "type": "number",
          "description": "Specify maximum rendering width. Ignored for JSON Output"
        }
      ]
    },
    "generate:key": {
      "settings": {},
      "commandPath": "@adonisjs/core/build/commands/GenerateKey",
      "commandName": "generate:key",
      "description": "Generate a new APP_KEY secret",
      "args": [],
      "aliases": [],
      "flags": []
    },
    "repl": {
      "settings": {
        "loadApp": true,
        "environment": "repl",
        "stayAlive": true
      },
      "commandPath": "@adonisjs/repl/build/commands/AdonisRepl",
      "commandName": "repl",
      "description": "Start a new REPL session",
      "args": [],
      "aliases": [],
      "flags": []
    },
    "dynamo:make": {
      "settings": {
        "loadApp": true,
        "stayAlive": false
      },
      "commandPath": "adonis-dynamodb/build/commands/Make",
      "commandName": "dynamo:make",
      "description": "Create a new Dyngoose model",
      "args": [
        {
          "type": "string",
          "propertyName": "name",
          "name": "name",
          "required": true,
          "description": "Name/path of the model class"
        }
      ],
      "aliases": [],
      "flags": [
        {
          "name": "pk",
          "propertyName": "pk",
          "type": "string"
        }
      ]
    },
    "dynamo:create": {
      "settings": {
        "loadApp": true,
        "stayAlive": true
      },
      "commandPath": "adonis-dynamodb/build/commands/Create",
      "commandName": "dynamo:create",
      "description": "Create DynamoDB tables on AWS from models",
      "args": [
        {
          "type": "string",
          "propertyName": "name",
          "name": "name",
          "required": false,
          "description": "Name/path of the model class"
        }
      ],
      "aliases": [],
      "flags": []
    },
    "dynamo:drop": {
      "settings": {
        "loadApp": true,
        "stayAlive": true
      },
      "commandPath": "adonis-dynamodb/build/commands/Drop",
      "commandName": "dynamo:drop",
      "description": "Drop one or many DynamoDB tables",
      "args": [
        {
          "type": "string",
          "propertyName": "name",
          "name": "name",
          "required": false,
          "description": "Name/path of the model class"
        }
      ],
      "aliases": [],
      "flags": []
    }
  },
  "aliases": {}
}
